// <auto-generated />
using System;
using KeystrokesData;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace KeystrokesData.Migrations
{
    [DbContext(typeof(KeystrokesDbContext))]
    [Migration("20220512103647_initial-migration")]
    partial class initialmigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn);

            modelBuilder.Entity("KeystrokesData.Entities.KnnEdgeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn);

                    b.Property<double>("Distance")
                        .HasColumnType("double precision");

                    b.Property<string>("Key")
                        .HasColumnType("text");

                    b.Property<int?>("KnnGraphEntityId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("KnnGraphEntityId");

                    b.ToTable("KnnEdgeEntity");
                });

            modelBuilder.Entity("KeystrokesData.Entities.KnnGraphEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn);

                    b.Property<int>("Metric")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("GraphData");
                });

            modelBuilder.Entity("KeystrokesData.Entities.KnnNodeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn);

                    b.Property<string>("Category")
                        .HasColumnType("text");

                    b.Property<int?>("KnnGraphEntityId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("KnnGraphEntityId");

                    b.ToTable("KnnNodeEntity");
                });

            modelBuilder.Entity("KeystrokesData.Entities.SingleProbe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn);

                    b.Property<string>("AsciiSign")
                        .HasColumnType("text");

                    b.Property<double>("Dwell")
                        .HasColumnType("double precision");

                    b.Property<double>("Flight")
                        .HasColumnType("double precision");

                    b.Property<int?>("TestSampleId")
                        .HasColumnType("integer");

                    b.Property<int?>("TrainSampleId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TestSampleId");

                    b.HasIndex("TrainSampleId");

                    b.ToTable("SingleProbe");
                });

            modelBuilder.Entity("KeystrokesData.Entities.TestSample", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn);

                    b.Property<string>("Category")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TestData");
                });

            modelBuilder.Entity("KeystrokesData.Entities.TrainSample", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn);

                    b.Property<string>("Category")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TrainData");
                });

            modelBuilder.Entity("KeystrokesData.Entities.KnnEdgeEntity", b =>
                {
                    b.HasOne("KeystrokesData.Entities.KnnGraphEntity", null)
                        .WithMany("Edges")
                        .HasForeignKey("KnnGraphEntityId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KeystrokesData.Entities.KnnNodeEntity", b =>
                {
                    b.HasOne("KeystrokesData.Entities.KnnGraphEntity", null)
                        .WithMany("Nodes")
                        .HasForeignKey("KnnGraphEntityId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KeystrokesData.Entities.SingleProbe", b =>
                {
                    b.HasOne("KeystrokesData.Entities.TestSample", null)
                        .WithMany("Probes")
                        .HasForeignKey("TestSampleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KeystrokesData.Entities.TrainSample", null)
                        .WithMany("Probes")
                        .HasForeignKey("TrainSampleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KeystrokesData.Entities.KnnGraphEntity", b =>
                {
                    b.Navigation("Edges");

                    b.Navigation("Nodes");
                });

            modelBuilder.Entity("KeystrokesData.Entities.TestSample", b =>
                {
                    b.Navigation("Probes");
                });

            modelBuilder.Entity("KeystrokesData.Entities.TrainSample", b =>
                {
                    b.Navigation("Probes");
                });
#pragma warning restore 612, 618
        }
    }
}
